// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[2],out=sel0Not);
	And(a=in,b=sel[2],out=e1);
	And(a=in,b=sel[2],out=f1);
	And(a=in,b=sel[2],out=g1);
	And(a=in,b=sel[2],out=h1);
	And(a=in,b=sel0Not,out=a1);
	And(a=in,b=sel0Not,out=b1);
	And(a=in,b=sel0Not,out=c1);
	And(a=in,b=sel0Not,out=d1);
	
	Not(in=sel[1],out=sel1Not);
	And(a=e1,b=sel1Not,out=e2);
	And(a=f1,b=sel1Not,out=f2);
	And(a=g1,b=sel[1],out=g2);
	And(a=h1,b=sel[1],out=h2);
	And(a=a1,b=sel1Not,out=a2);
	And(a=b1,b=sel1Not,out=b2);
	And(a=c1,b=sel[1],out=c2);
	And(a=d1,b=sel[1],out=d2);
	
	DMux(in=g2,sel=sel[0],a=g,b=h);
	DMux(in=e2,sel=sel[0],a=e,b=f);
	DMux(in=c2,sel=sel[0],a=c,b=d);
	DMux(in=a2,sel=sel[0],a=a,b=b);
}