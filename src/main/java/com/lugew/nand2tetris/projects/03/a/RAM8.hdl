// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	DMux8Way(sel=address, in=load, a=oout0, b=oout1, c=oout2,d=oout3,e=oout4,f=oout5,g=oout6, h=oout7); 
	And(a=load,b=oout0,out=load0);
	And(a=load,b=oout1,out=load1);
	And(a=load,b=oout2,out=load2);
	And(a=load,b=oout3,out=load3);
	And(a=load,b=oout4,out=load4);
	And(a=load,b=oout5,out=load5);
	And(a=load,b=oout6,out=load6);
	And(a=load,b=oout7,out=load7);
	Register(in=in,load=load0,out=r0out);
	Register(in=in,load=load1,out=r1out);
	Register(in=in,load=load2,out=r2out);
	Register(in=in,load=load3,out=r3out);
	Register(in=in,load=load4,out=r4out);
	Register(in=in,load=load5,out=r5out);
	Register(in=in,load=load6,out=r6out);
	Register(in=in,load=load7,out=r7out);
	Mux8Way16(a=r0out,b=r1out,c=r2out,d=r3out,e=r4out,f=r5out,g=r6out,h=r7out,sel=address,out=out); 
}